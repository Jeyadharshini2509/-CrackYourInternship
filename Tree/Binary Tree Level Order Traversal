class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> q=new LinkedList<TreeNode>();
        List<List<Integer>>wrapList=new ArrayList<>();
        if(root==null)return wrapList;
        q.offer(root);
        while(!q.isEmpty()){
            int levelNum=q.size();
            List<Integer> subList=new LinkedList<Integer>();
            for(int i=0;i<levelNum;i++){
                if(q.peek().left !=null)q.offer(q.peek().left);
                if(q.peek().right !=null)q.offer(q.peek().right);
                subList.add(q.poll().val);
                
            }
            wrapList.add(subList);
            
        }
        return wrapList;
        
        
    }
}
