class Solution {
    public int numIslands(char[][] grid) {
        int islands=0;
        int n=grid.length;
        int m=grid[0].length;
        int vis[][]=new int[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='1' && vis[i][j]==0){
                    islands++;
                    dfs(grid,vis,n,m,i,j);
                }
            }
        }
        return islands;
    }
    private void dfs(char[][] grid,int[][] vis,int n,int m,int row,int col){
        if(row<0 ||row>=n ||col<0 || col>=m || vis[row][col]==1){
            return ;
        }
        vis[row][col]=1;
        int [] delrow={1,-1,0,0};
        int[] delcol={0,0,-1,1};
        for(int i=0;i<4;i++){
            int nrow=row+delrow[i];
            int ncol=col+delcol[i];
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && grid[nrow][ncol]=='1' && vis[nrow][ncol]==0){
                dfs(grid,vis,n,m,nrow,ncol);
            }
        }
    }
}
